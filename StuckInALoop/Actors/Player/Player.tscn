[gd_scene load_steps=4 format=2]

[ext_resource path="res://Pete/Player/PlayerModel.tscn" type="PackedScene" id=1]

[sub_resource type="GDScript" id=1]
script/source = "extends RigidBody2D

export var run_speed = 100
export var dash_speed = 10
var state = PlayerStates.idle
var state_time = 0
var velocity = Vector2.ZERO
var angle = 0
onready var collider = $CollisionShape2D
onready var camera = $PlayerCamera
onready var target = $PlayerSprite/Target

# Called when the node enters the scene tree for the first time.
func _ready():
	Input.set_mouse_mode(Input.MOUSE_MODE_CONFINED)
	
func look_at_target():
	var mousepos = camera.get_global_mouse_position()
	angle = global_position.angle_to_point(mousepos)
	
func _process(delta):
	process_statemachine(delta)
	pass
	
func _integrate_forces(pstate):
	pstate.angular_velocity = 0
	pstate.linear_velocity = lerp(pstate.linear_velocity, velocity, .25)
	var t = Transform2D(angle, pstate.transform.origin)
	pstate.transform = t
	
func change(new_state):
	state = new_state
	state_time = 0
	print(\"player state : \", new_state)

func player_move_input():
	var x = Input.get_action_strength(\"player_move_right\") - Input.get_action_strength(\"player_move_left\")
	var y = -Input.get_action_strength(\"player_move_up\") + Input.get_action_strength(\"player_move_down\")
	return Vector2(x, y)

func try_dash():
	if (Input.is_action_just_pressed(\"dash\")):
		change(PlayerStates.dash)
		return true
	return false

func get_forward():
	return (target.global_position - global_position).normalized()

func try_shoot():
	if (Input.is_action_just_pressed(\"player_shoot\")):
		var bullet = load(\"res://Pete/Bullet/Bullet.tscn\").instance()
		bullet.transform = Transform2D(angle, target.global_position)
		bullet.velocity = get_forward()
		get_tree().current_scene.add_child(bullet)

func process_statemachine(delta):
	try_shoot()
	state_time += delta
	match (state):
		PlayerStates.idle_enter:
			change(PlayerStates.idle)
			
		PlayerStates.idle:
			velocity = Vector2.ZERO
			if (player_move_input().length() > .1):
				change(PlayerStates.run)
			if (try_dash()):
				velocity = get_forward()
			look_at_target()
			
		PlayerStates.run:
			if (player_move_input().length() < .1):
				change(PlayerStates.idle_enter)
			velocity = player_move_input() * run_speed
			try_dash()
			look_at_target()
			
		PlayerStates.dash:
			if (state == PlayerStates.idle):
				velocity = target.global_position - global_position
			velocity = velocity.normalized() * dash_speed * run_speed
			if (state_time > .25):
				change(PlayerStates.idle_enter)
"

[sub_resource type="CircleShape2D" id=2]
radius = 33.9532

[node name="Player" type="RigidBody2D"]
rotation = -0.00601703
gravity_scale = 0.0
can_sleep = false
script = SubResource( 1 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
shape = SubResource( 2 )

[node name="PlayerSprite" parent="." instance=ExtResource( 1 )]
rotation = -1.5708

[node name="Target" type="Node2D" parent="PlayerSprite"]
position = Vector2( 0, -100 )

[node name="PlayerCamera" type="Camera2D" parent="."]
current = true
