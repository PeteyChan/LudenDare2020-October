[gd_scene load_steps=4 format=2]

[ext_resource path="res://Rick/Assets/Boss/Boss.tscn" type="PackedScene" id=1]

[sub_resource type="GDScript" id=1]
script/source = "extends RigidBody2D

enum states {
	spiral_attack,
	chase,
	death
	}

export var move_speed = 100
var target 
var current_state = states.chase
var state_time = 0
var velocity = Vector2.ZERO
var health = 10
var projectile = load(\"res://Pete/CannonBalls/CannonBall.tscn\")
var damage = 3
onready var animator: AnimationPlayer = $Boss/Boss_Sprite_Sheet/AnimationPlayer

func _ready():
	print(\"spawn\")

func _process(delta):
	state_time += delta
	process_statemachine(delta)

func change_state(state):
	state_time = 0
	current_state = state
	pass

func distance_to_target():
	return (global_position - Game.player.global_position).length()

func _integrate_forces(state):
	state.transform = Transform2D(0, state.transform.origin)
	state.angular_velocity = 0
	state.linear_velocity = velocity
	pass

# warning-ignore:unused_argument
func process_statemachine(delta):
	match(current_state):
		_:
			pass


# warning-ignore:unused_signal
signal on_damage(amount, recoil_direction)


func _on_Boss_on_damage(amount, recoil_direction):
	velocity += recoil_direction.normalized() * 100
	health	-= amount
	if (health <= 0):
		queue_free()
"

[sub_resource type="CircleShape2D" id=2]
radius = 133.249

[node name="Boss" type="RigidBody2D"]
script = SubResource( 1 )

[node name="Boss" parent="." instance=ExtResource( 1 )]

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
position = Vector2( -1.05945, -16.9514 )
shape = SubResource( 2 )
[connection signal="on_damage" from="." to="." method="_on_Boss_on_damage"]
